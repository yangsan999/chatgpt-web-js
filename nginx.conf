user nginx;
worker_processes auto;

error_log /var/log/nginx/error.log notice;
pid /var/run/nginx.pid;

events {
worker_connections 1024;
}

http {
include /etc/nginx/mime.types;
default_type application/octet-stream;

log_format main '$remote_addr - $remote_user [$time_local] '
'"$request" $status $body_bytes_sent '
'"$http_referer" "$http_user_agent" "$http_x_forwarded_for"';

access_log /var/log/nginx/access.log main;

sendfile on;

keepalive_timeout 65;
server_names_hash_bucket_size 128;
proxy_hide_header openai-model;
proxy_hide_header openai-organization;
proxy_hide_header openai-processing-ms;
proxy_hide_header openai-version;
proxy_hide_header server;
proxy_hide_header strict-transport-security;
proxy_hide_header vary;
proxy_hide_header x-ratelimit-limit-requests;
proxy_hide_header x-ratelimit-remaining-requests;
proxy_hide_header x-ratelimit-reset-requests;
proxy_hide_header x-request-id;

server {
listen 443 ssl http2;
server_name example.com;
gzip on;
gzip_min_length 1k;
gzip_types text/event-stream;

ssl_certificate /etc/nginx/cert.pem;
ssl_certificate_key /etc/nginx/key.pem;
ssl_protocols TLSv1.2;
ssl_ciphers HIGH:!aNULL:!MD5:!RC4;
ssl_session_cache shared:SSL:10m;
ssl_session_timeout 10m;


location ^~ /v1 {
if ($request_method !~ ^(GET|POST)$) {
return 405;
}
proxy_pass https://api.openai.com/v1;
proxy_set_header Host api.openai.com;
proxy_ssl_name api.openai.com;
proxy_ssl_server_name on;
proxy_set_header Authorization "Bearer sk-xxx";
proxy_pass_header Authorization;
proxy_buffering off;
}

location / {
if ($request_method !~ ^(GET|POST)$) {
return 405;
}
root /usr/share/nginx/html;
index index.html index.htm;
}



}

server {
listen 80;
server_name example.com;
if ($request_method !~ ^(GET|POST)$) {
return 405;
}

return 301 https://$server_name$request_uri;
}

include /etc/nginx/conf.d/*.conf;

}